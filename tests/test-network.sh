#!/bin/bash

# Script de test connectivit√© r√©seau DoriaV2
# Usage: ./test-network.sh

set -euo pipefail

# Couleurs
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  ${1}${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ ${1}${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  ${1}${NC}"; }
log_error() { echo -e "${RED}‚ùå ${1}${NC}"; }

echo -e "${BLUE}üåê TEST CONNECTIVIT√â R√âSEAU DORIAV2${NC}"
echo "==================================="

# Test 1: V√©rifier le r√©seau Docker
log_info "Test 1: V√©rification du r√©seau Docker..."
if docker network ls | grep -q "doriav2"; then
    log_success "R√©seau Docker 'doriav2' trouv√©"
else
    log_warning "R√©seau Docker 'doriav2' non trouv√©"
fi

# Test 2: V√©rifier les ports
log_info "Test 2: V√©rification des ports expos√©s..."

# Port SIP (5060)
if netstat -ln 2>/dev/null | grep -q ":5060"; then
    log_success "Port SIP 5060 expos√©"
else
    log_warning "Port SIP 5060 non expos√©"
fi

# Port HTTP (8080)
if netstat -ln 2>/dev/null | grep -q ":8080"; then
    log_success "Port HTTP 8080 expos√©"
else
    log_warning "Port HTTP 8080 non expos√©"
fi

# Test 3: Connectivit√© entre conteneurs
log_info "Test 3: Connectivit√© entre conteneurs..."
if docker compose exec asterisk ping -c 1 doriav2-mysql >/dev/null 2>&1; then
    log_success "Connectivit√© Asterisk ‚Üí MySQL OK"
else
    log_error "Connectivit√© Asterisk ‚Üí MySQL KO"
fi

if docker compose exec asterisk ping -c 1 doriav2-web >/dev/null 2>&1; then
    log_success "Connectivit√© Asterisk ‚Üí Web OK"
else
    log_error "Connectivit√© Asterisk ‚Üí Web KO"
fi

# Test 4: R√©solution DNS interne
log_info "Test 4: R√©solution DNS interne..."
if docker compose exec asterisk nslookup doriav2-mysql >/dev/null 2>&1; then
    log_success "R√©solution DNS doriav2-mysql OK"
else
    log_error "R√©solution DNS doriav2-mysql KO"
fi

echo ""
log_info "Tests r√©seau termin√©s"
