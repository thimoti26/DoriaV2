#!/bin/bash

# Script de diagnostic des contacts SIP - DoriaV2
# Analyse et gestion des endpoints PJSIP

echo "üìû DIAGNOSTIC CONTACTS SIP - DORIAV2"
echo "===================================="
echo "Date: $(date)"
echo ""

# V√©rifier si Asterisk est accessible
if ! docker exec doriav2-asterisk asterisk -rx "core show version" > /dev/null 2>&1; then
    echo "‚ùå Asterisk non accessible. V√©rifiez que le conteneur est d√©marr√©."
    exit 1
fi

echo "‚úÖ Asterisk accessible"
echo ""

# Fonction pour afficher le statut des endpoints
show_endpoints_status() {
    echo "üìä STATUT DES ENDPOINTS SIP"
    echo "----------------------------"
    
    # R√©cup√©rer le statut des endpoints
    docker exec doriav2-asterisk asterisk -rx "pjsip show endpoints" | \
    grep -E "(Endpoint:|Contact:)" | \
    while read line; do
        if [[ $line =~ Endpoint:.*([0-9]{4}).*(Available|Unavailable|Not\ in\ use) ]]; then
            endpoint=$(echo $line | grep -o '[0-9]\{4\}' | head -1)
            status=$(echo $line | grep -o -E "(Available|Unavailable|Not in use)")
            
            case $status in
                "Available")
                    echo "‚úÖ Extension $endpoint : Disponible"
                    ;;
                "Not in use")
                    echo "üü¢ Extension $endpoint : Connect√© (pas en cours d'appel)"
                    ;;
                "Unavailable")
                    echo "‚ùå Extension $endpoint : Non connect√©"
                    ;;
            esac
        fi
    done
    echo ""
}

# Fonction pour afficher les contacts d√©taill√©s
show_contacts_detail() {
    echo "üîç D√âTAIL DES CONTACTS"
    echo "----------------------"
    
    docker exec doriav2-asterisk asterisk -rx "pjsip show aors" | \
    grep -E "(Aor:|Contact:)" | \
    while read line; do
        if [[ $line =~ Aor:.*([0-9]{4}) ]]; then
            aor=$(echo $line | grep -o '[0-9]\{4\}')
            echo "üìã AOR $aor:"
        elif [[ $line =~ Contact:.*sip:([0-9]{4})@([^\ ]+).*\[(Avail|Unavail)\] ]]; then
            contact_line=$(echo $line | sed 's/^[[:space:]]*//')
            if [[ $contact_line =~ Avail ]]; then
                echo "  ‚úÖ $contact_line"
            else
                echo "  ‚ùå $contact_line"
            fi
        fi
    done
    echo ""
}

# Fonction pour expliquer les messages "Unreachable"
explain_unreachable() {
    echo "üí° EXPLICATION DES MESSAGES 'UNREACHABLE'"
    echo "------------------------------------------"
    echo ""
    echo "Les messages 'Contact X/sip:X@dynamic is now Unreachable' sont NORMAUX et indiquent que :"
    echo ""
    echo "‚Ä¢ üîç Asterisk effectue des v√©rifications p√©riodiques des contacts SIP"
    echo "‚Ä¢ üìû Aucun client SIP n'est connect√© pour ces extensions"
    echo "‚Ä¢ ‚è∞ Le param√®tre 'qualify_frequency=30' teste la disponibilit√© toutes les 30 secondes"
    echo "‚Ä¢ üè† Les contacts '@dynamic' sont cr√©√©s automatiquement lors de l'enregistrement"
    echo ""
    echo "Ce N'EST PAS une erreur si :"
    echo "‚úÖ Aucun t√©l√©phone/softphone n'est configur√© pour ces extensions"
    echo "‚úÖ Les extensions sont cr√©√©es pour usage futur"
    echo "‚úÖ Les clients SIP se connectent/d√©connectent p√©riodiquement"
    echo ""
}

# Fonction pour afficher les recommandations
show_recommendations() {
    echo "üöÄ RECOMMANDATIONS"
    echo "------------------"
    echo ""
    echo "Pour r√©duire les messages 'Unreachable' :"
    echo ""
    echo "1. üì± Connecter des clients SIP :"
    echo "   ‚Ä¢ Linphone, X-Lite, Zoiper, etc."
    echo "   ‚Ä¢ Serveur : IP du serveur Asterisk"
    echo "   ‚Ä¢ Port : 5060"
    echo "   ‚Ä¢ Utilisateur/Mot de passe : voir pjsip.conf"
    echo ""
    echo "2. ‚öôÔ∏è Ajuster la configuration (optionnel) :"
    echo "   ‚Ä¢ Augmenter 'qualify_frequency' (ex: 60 secondes)"
    echo "   ‚Ä¢ R√©duire 'qualify_timeout'"
    echo "   ‚Ä¢ D√©sactiver 'qualify_frequency=0' pour certaines extensions"
    echo ""
    echo "3. üßπ Supprimer les extensions inutilis√©es :"
    echo "   ‚Ä¢ Commenter les sections dans pjsip.conf"
    echo "   ‚Ä¢ Recharger la configuration Asterisk"
    echo ""
}

# Fonction pour nettoyer les contacts expir√©s
clean_expired_contacts() {
    echo "üßπ NETTOYAGE DES CONTACTS EXPIR√âS"
    echo "---------------------------------"
    
    echo "Suppression des contacts dynamiques non disponibles..."
    
    # Pour chaque AOR, supprimer les contacts dynamiques unavailable
    for ext in 1001 1002 1003 1004; do
        echo "üìû Nettoyage extension $ext..."
        docker exec doriav2-asterisk asterisk -rx "pjsip delete contact $ext/sip:$ext@dynamic" 2>/dev/null || true
    done
    
    echo "‚úÖ Nettoyage termin√©"
    echo ""
}

# Fonction pour configurer un client SIP exemple
show_sip_client_config() {
    echo "üì± CONFIGURATION CLIENT SIP EXEMPLE"
    echo "-----------------------------------"
    echo ""
    echo "Pour connecter un softphone (Linphone, X-Lite, etc.) :"
    echo ""
    echo "üè† Serveur SIP :"
    echo "   ‚Ä¢ Adresse : $(docker inspect doriav2-asterisk | grep IPAddress | tail -1 | cut -d'"' -f4) ou localhost"
    echo "   ‚Ä¢ Port : 5060"
    echo "   ‚Ä¢ Transport : UDP"
    echo ""
    echo "üë§ Comptes disponibles :"
    echo "   ‚Ä¢ Extension 1001 / Mot de passe : linphone1001"
    echo "   ‚Ä¢ Extension 1002 / Mot de passe : linphone1002"
    echo "   ‚Ä¢ Extension 1003 / Mot de passe : linphone1003"
    echo "   ‚Ä¢ Extension 1004 / Mot de passe : linphone1004"
    echo ""
    echo "üìã Configuration Linphone :"
    echo "   1. Ajouter un compte SIP"
    echo "   2. Nom d'utilisateur : 1001 (ou 1002, 1003, 1004)"
    echo "   3. Mot de passe : linphone1001 (correspondant)"
    echo "   4. Domaine : IP du serveur"
    echo "   5. Activer l'enregistrement automatique"
    echo ""
}

# Fonction de test de connectivit√©
test_connectivity() {
    echo "üîó TEST DE CONNECTIVIT√â"
    echo "-----------------------"
    
    echo "üì° Test des ports Asterisk..."
    
    # Test port SIP UDP
    if docker exec doriav2-asterisk netstat -un | grep -q ":5060"; then
        echo "‚úÖ Port SIP 5060/UDP ouvert"
    else
        echo "‚ùå Port SIP 5060/UDP non disponible"
    fi
    
    # Test port Manager Interface
    if docker exec doriav2-asterisk netstat -tn | grep -q ":5038"; then
        echo "‚úÖ Port Manager 5038/TCP ouvert"
    else
        echo "‚ùå Port Manager 5038/TCP non disponible"
    fi
    
    # Test des transports PJSIP
    echo ""
    echo "üöÄ Transports PJSIP actifs :"
    docker exec doriav2-asterisk asterisk -rx "pjsip show transports" | grep -E "(transport-|Type|Bind)"
    echo ""
}

# === MENU PRINCIPAL ===

case "${1:-status}" in
    "status"|"")
        show_endpoints_status
        show_contacts_detail
        ;;
    "explain")
        explain_unreachable
        ;;
    "recommend")
        show_recommendations
        ;;
    "clean")
        clean_expired_contacts
        show_endpoints_status
        ;;
    "config")
        show_sip_client_config
        ;;
    "test")
        test_connectivity
        ;;
    "full")
        show_endpoints_status
        show_contacts_detail
        explain_unreachable
        show_recommendations
        show_sip_client_config
        test_connectivity
        ;;
    *)
        echo "Usage: $0 [status|explain|recommend|clean|config|test|full]"
        echo ""
        echo "  status     - Afficher le statut des endpoints (d√©faut)"
        echo "  explain    - Expliquer les messages 'Unreachable'"
        echo "  recommend  - Recommandations pour am√©liorer la situation"
        echo "  clean      - Nettoyer les contacts expir√©s"
        echo "  config     - Exemple de configuration client SIP"
        echo "  test       - Tester la connectivit√©"
        echo "  full       - Rapport complet"
        ;;
esac

echo ""
echo "üéØ R√âSUM√â"
echo "========="
echo ""
echo "Les messages 'Unreachable' sont normaux quand aucun client SIP n'est connect√©."
echo "Pour une utilisation en production, connectez des softphones aux extensions."
echo ""
echo "üìû Test rapide : Configurez Linphone avec l'extension 1001/linphone1001"
echo "üîó Interface SVI : http://localhost:8080/svi-admin/"
echo ""
echo "‚ú® Tout fonctionne correctement ! ‚ú®"
