services:
  # MySQL Database
  mysql:
    build: ./mysql
    container_name: doriav2-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: doriav2_root_password
      MYSQL_DATABASE: doriav2
      MYSQL_USER: doriav2_user
      MYSQL_PASSWORD: doriav2_password
    ports:
      - "3306:3306"
    volumes:
      # Point de montage direct pour la configuration MySQL
      - ./mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      # Volume persistant pour les données
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    networks:
      - doriav2_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdoriav2_root_password"]
      timeout: 10s
      retries: 3
      interval: 30s

  # Redis Cache (for sessions and caching)
  redis:
    image: redis:7-alpine
    container_name: doriav2-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - doriav2_network
    command: redis-server --appendonly yes --requirepass doriav2_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "doriav2_redis_password", "ping"]
      timeout: 5s
      retries: 3
      interval: 30s

  # PHP/Apache Web Server (placeholder for future app)
  web:
    image: php:8.2-apache
    container_name: doriav2-web
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_NAME=doriav2
      - DB_USER=doriav2_user
      - DB_PASSWORD=doriav2_password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=doriav2_redis_password
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - web_logs:/var/log/apache2
    networks:
      - doriav2_network
    command: >
      bash -c "
      apt-get update &&
      apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev zip unzip git &&
      docker-php-ext-configure gd --with-freetype --with-jpeg &&
      docker-php-ext-install gd pdo pdo_mysql mysqli &&
      a2enmod rewrite headers &&
      echo '<Directory /var/www/html>' >> /etc/apache2/apache2.conf &&
      echo '  AllowOverride All' >> /etc/apache2/apache2.conf &&
      echo '</Directory>' >> /etc/apache2/apache2.conf &&
      echo '<?php phpinfo(); ?>' > /var/www/html/index.php &&
      apache2-foreground
      "



  # Asterisk PBX Server
  asterisk:
    build: ./asterisk
    container_name: doriav2-asterisk
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_NAME=doriav2
      - DB_USER=doriav2_user
      - DB_PASSWORD=doriav2_password
    ports:
      - "5060:5060/udp"  # SIP UDP
      - "5060:5060/tcp"  # SIP TCP
      - "5038:5038"      # AMI (Asterisk Manager Interface)
      - "10000-10100:10000-10100/udp"  # RTP range
    volumes:
      # Points de montage directs pour les fichiers de configuration (modifications en temps réel)
      - ./asterisk/config/extensions.conf:/etc/asterisk/extensions.conf:ro
      - ./asterisk/config/pjsip.conf:/etc/asterisk/pjsip.conf:ro
      - ./asterisk/config/modules.conf:/etc/asterisk/modules.conf:ro
      - ./asterisk/config/asterisk.conf:/etc/asterisk/asterisk.conf:ro
      - ./asterisk/config/rtp.conf:/etc/asterisk/rtp.conf:ro
      - ./asterisk/config/manager.conf:/etc/asterisk/manager.conf:ro
      - ./asterisk/config/res_odbc.conf:/etc/asterisk/res_odbc.conf:ro
      - ./asterisk/config/cdr_odbc.conf:/etc/asterisk/cdr_odbc.conf:ro
      - ./asterisk/config/extconfig.conf:/etc/asterisk/extconfig.conf:ro
      - ./asterisk/config/odbc.ini:/etc/odbc.ini:ro
      # Fichiers audio personnalisés
      - ./asterisk/sounds/custom:/var/lib/asterisk/sounds/custom:ro
      # Volumes persistants pour les données
      - asterisk_etc:/etc/asterisk/backup
      - asterisk_lib:/var/lib/asterisk
      - asterisk_log:/var/log/asterisk
      - asterisk_spool:/var/spool/asterisk
    networks:
      - doriav2_network
    healthcheck:
      test: ["CMD", "pgrep", "asterisk"]
      timeout: 10s
      retries: 5
      interval: 15s



networks:
  doriav2_network:
    driver: bridge
    name: doriav2_network

volumes:
  mysql_data:
    name: doriav2_mysql_data
  mysql_logs:
    name: doriav2_mysql_logs
  redis_data:
    name: doriav2_redis_data
  web_logs:
    name: doriav2_web_logs
  asterisk_etc:
    name: doriav2_asterisk_etc
  asterisk_lib:
    name: doriav2_asterisk_lib
  asterisk_log:
    name: doriav2_asterisk_log
  asterisk_spool:
    name: doriav2_asterisk_spool